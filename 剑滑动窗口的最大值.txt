import java.util.ArrayDeque;
import java.util.ArrayList;

public class Solution {
    public ArrayList<Integer> maxInWindows(int [] num, int size)
    {
        if(num.length < size || size <= 0 || num ==null || num.length == 0)
            return new ArrayList<Integer>();
        ArrayList<Integer> res = new ArrayList<>();
        ArrayDeque<Integer> queue = new ArrayDeque<>();
        int index;
        for (int i = 0; i < num.length ; i++)
        {
            index = i - size +1;
            if(queue.isEmpty())
            {
                queue.add(i);
            }
            else if(index > queue.getFirst())
            {
                queue.pollFirst();
            }
            while (!queue.isEmpty() && num[i] >= num[queue.getLast()])
            {
                queue.pollLast();
            }
            queue.add(i);
            if(index >= 0)
            {
                res.add(num[queue.getFirst()]);
            }



        }
        return res;
    }
    public static void main(String []args)
    {
        Solution test =new Solution();
        int [] num = new int[]{2,3,4,2,6,2,5,1};
        System.out.println(test.maxInWindows(num ,3).toString());
    }
}