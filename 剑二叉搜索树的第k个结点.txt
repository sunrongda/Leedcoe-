import java.awt.*;
import java.util.Stack;

/*
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    TreeNode KthNode(TreeNode pRoot, int k)
    {
        if(pRoot == null || k == 0) return null;
        int count =0;
        TreeNode node = pRoot;
        Stack<TreeNode> stack = new Stack<>();

        do{
            if(node != null)
            {
                stack.push(node);
                node = node.left;
            }
            else
            {
                node = stack.pop();

                count ++;
                if(count == k)
                {
                    return  node;
                }
                node = node.right;
            }
        }while (node != null||!stack.isEmpty());
        return null;
    }
//    {8,6,10,5,7,9,11},2
    public static void main(String [] args)
    {
        Solution test = new Solution();
        TreeNode root =new TreeNode(8);
        root.left = new TreeNode(6);
        root.left.left = new TreeNode(5);
        root.left.right = new TreeNode(7);
        root.right = new TreeNode(10);
        root.right.left = new TreeNode(9);
        root.right.right = new TreeNode(11);
        System.out.println(test.KthNode(root , 7).val);
    }


}