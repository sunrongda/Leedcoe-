public class Solution {
    public int NumberOf1(int n) {
        int count = 0;
        while (n != 0)
        {
            count++;
            n = n & (n - 1);
        }
        return count;
    }

    public static void main(String []args)
    {
        Solution test = new Solution();
        System.out.println(test.NumberOf1(1));
    }
};
相关题目：
一：
判断一个整数是不是2的整数次方，一个整数是2的整数次方，那么他的二进制表示中有且只有一个是1，而其他所有位0
，那么此数减一后与本身与，得到0否？
二：
输入两个整数m和n，计算m中的二进制表示改变多少位，才能变成n
比如10的二进制1010，13的二进制表示为1101，需要改变1010的三位才能得到1101.我们需要分为两步解决这个问题：
第一步求两个数的异或，第二步统计异或结果中的1位数。
